@page "/Manager/ManageMenu"

@using Repository.Repositories
@using Models
@using DataBaseAccess.Models

@inject Repository.Services.PizzaService pizzaService
@inject NavigationManager navigationManager

<style>
    .table-fill {
  background: white;
  border-radius:3px;
  border-collapse: collapse;
  height: 320px;
  margin: auto;
  max-width: 1000px;
  padding:5px;
  width: 100%;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
  animation: float 5s infinite;
}
 
th {
  color:#D5DDE5;;
  background:rgb(0, 123, 255);
  border-bottom:4px solid #9ea7af;
  border-right: 1px solid #343a45;
  font-size:23px;
  font-weight: 100;
  padding:24px;
  text-align:left;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  vertical-align:middle;
}

th:first-child {
  border-top-left-radius:3px;
}
 
th:last-child {
  border-top-right-radius:3px;
  border-right:none;
}
  
tr {
  border-top: 1px solid #C1C3D1;
  border-bottom-: 1px solid #C1C3D1;
  color:#666B85;
  font-size:16px;
  font-weight:normal;
  text-shadow: 0 1px 1px rgba(256, 256, 256, 0.1);
}
 
tr:hover td {
  background:#4E5066;
  color:#FFFFFF;
  border-top: 1px solid #22262e;
}
 
tr:first-child {
  border-top:none;
}

tr:last-child {
  border-bottom:none;
}
 
tr:nth-child(odd) td {
  background:#EBEBEB;
}
 
tr:nth-child(odd):hover td {
  background:#4E5066;
}

tr:last-child td:first-child {
  border-bottom-left-radius:3px;
}
 
tr:last-child td:last-child {
  border-bottom-right-radius:3px;
}
 
td {
  background:#FFFFFF;
  padding:20px;
  text-align:left;
  vertical-align:middle;
  font-weight:300;
  font-size:18px;
  text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.1);
  border-right: 1px solid #C1C3D1;
}

td:last-child {
  border-right: 0px;
}

th.text-left {
  text-align: left;
}

th.text-center {
  text-align: center;
}

th.text-right {
  text-align: right;
}

td.text-left {
  text-align: left;
}

td.text-center {
  text-align: center;
}

td.text-right {
  text-align: right;
}

</style>
<center>
    <h3>Manage Menu</h3>
    <br />
    <div class="box-shadow">
        <button type="button" class="btn btn-primary" @onclick="triggerDisplayMenu">Display Menu</button>
        <button type="button" class="btn btn-primary" @onclick="InsertPizza">New Pizza</button>
        <button type="button" class="btn btn-primary" @onclick="refresh">Refresh</button>
    </div>
</center>

@if (displayMenu)
{
    <center>
    <h4>Menu</h4>
    </center>
    @if (menu is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="border-secondary">
            <center>
                <table class="table-fill">
                    <thead>
                        <tr>
                            <th class="text-left">Pizza Id</th>
                            <th class="text-left">Price</th>
                            <th class="text-left">Cost</th>
                            <th class="text-left">Availability</th>
                            <th class="text-left">Type</th>
                            <th class="text-left">Points</th>
                            <th class="text-left"></th>
                        </tr>
                    </thead>
                    <tbody class ="table-hover">
                        @foreach(var item in menu)
                        {
                            <tr>
                                <td class="text-left">@item.IdPizza</td>
                                <td class="text-left">@item.Price</td>
                                <td class="text-left">@item.Cost</td>
                                <td class="text-left">@item.IsAvailable</td>
                                <td class="text-left">@item.Type</td>
                                <td class="text-left">@item.Points</td>
                                <td class="text-left">
                                    <button type="submit" class="btn btn-primary" @onclick="() => editPizza(item)">Edit</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </center>
        </div>
    }
}

@code 
{
    private bool displayInsertForm;
    private bool displayMenu = true;
    private bool displayDeletePizza;
    private bool displayUpdateAvailability;
    private bool pizzaAvaliability;
    private int deletePizzaId;
    private int updatePizzaId;
    private List<Pizza> menu;
    private PizzaFront newPizza = new PizzaFront();

    private async void refresh()
    {
        menu = await pizzaService.GetMenu();
        this.StateHasChanged();
    }

    protected override async Task OnParametersSetAsync() => menu = await pizzaService.GetMenu();

    private void InsertPizza()
    {
        navigationManager.NavigateTo("/Manager/EditPizza/-1");
    }

    protected void deletePizza()
    {
        pizzaService.DeletePizza(deletePizzaId);
        this.refresh();
    }

    private void UpdateAvailability()
    {
        pizzaService.ChangePizzaAvailability(updatePizzaId, pizzaAvaliability);
        this.refresh();
    }

    private void triggerDisplayMenu()
    {
        if (displayMenu == true)
            displayMenu = false;
        else
            displayMenu = true;
    }

    private void editPizza(Pizza pizza)
    {
        navigationManager.NavigateTo($"/Manager/EditPizza/{pizza.IdPizza}");
    }
}